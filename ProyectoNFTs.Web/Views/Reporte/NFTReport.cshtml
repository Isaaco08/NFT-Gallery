@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model IEnumerable<ProyectoNFTs.Application.DTOs.NftDTO>

<body id="MyBody">
<form id="myForm"
      asp-action="NFTReportPDF"
      asp-controller="Reporte"
      asp-antiforgery="true"
      method="post"
      asp-antiforgery="true">
    <button type="submit" class="btn btn-primary">Descargar Reporte</button>
</form>

<h1>Reporte de NFTs</h1>
<div class="table-responsive">
    <table id="sortable" class="table table-striped table-hover table-responsive-md table-sm mt-3" style="border-radius: 6px; overflow: hidden; font-size:medium">
        <thead style="background-color: black; color: #fff; cursor:pointer ; height: 50px;text-align: left; vertical-align: middle;">
            <tr>
                <th onclick="sortBy(0)" style="cursor:pointer">
                    @Html.DisplayNameFor(model => model.IdNft)
                </th>
                <th onclick="sortBy(1)" style="cursor:pointer">
                    @Html.DisplayNameFor(model => model.Nombre)
                </th>
                <th onclick="sortBy(2)" style="cursor:pointer">
                    @Html.DisplayNameFor(model => model.Autor)
                </th>
                <th onclick="sortBy(3)" style="cursor:pointer">
                    @Html.DisplayNameFor(model => model.Precio)
                </th>
                <th onclick="sortBy(4)" style="cursor:pointer">
                    @Html.DisplayNameFor(model => model.Cantidad)
                </th>
                <th onclick="sortBy(5)" style="cursor:pointer">
                    @Html.DisplayNameFor(model => model.Imagen)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr style="background-color: white">
                    <td style="text-transform:uppercase">
                        @if (item.IdNft != Guid.Empty)
                        {
                            @item.IdNft.ToString().Substring(0, 16)
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nombre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Autor)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Precio)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Cantidad)
                    </td>
                    <td>
                        @*@Html.DisplayFor(modelItem => item.Imagen)*@
                        <!-- Show Image as Base64-->
                        <input type="image" src="data:image/jpeg;charset=utf-8;base64,@Convert.ToBase64String(item.Imagen)"
                               id="ImagenProducto" style="height:90px;width:90px" class="zoom2">
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @Html.PagedListPager((IPagedList)Model, page =>
            Url.Action("NFTReport", new { page }), new PagedListRenderOptions
    {
        Display = PagedListDisplayMode.Always,
        MaximumPageNumbersToDisplay = 5,
        LiElementClasses = new String[] { "page-item" },
        PageClasses = new String[] { "page-link" }
    })
</div>
</body>
@section scripts {
    <script>
        $(document).ready(function () {
            // Verificar si hay un mensaje de error y mostrarlo en un toast
            var errorMessage = "@ViewBag.ErrorMessage";
            if (errorMessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: errorMessage
                });
            }


        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}