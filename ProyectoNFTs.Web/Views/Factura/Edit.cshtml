@model ProyectoNFTs.Application.DTOs.FacturaEncabezadoDTO

@{
    ViewData["Title"] = "Edit";
}
<body id="MyBody2">
<div class="card">
    <div class="card-header bg-black text-light">
        <h5>Facturar - Actualizar</h5>
    </div>
    <div class="row mx-2 my-2">
        <div class="col-md-4">
            <form asp-action="Edit" asp-controller="Factura"
                  data-ajax="true"
                  data-ajax-method="POST"
                  data-ajax-begin="onBegin"
                  data-ajax-failure="onFailure"
                  data-ajax-success="onSuccess"
                  data-ajax-complete="onComplete">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="row">

                </div>
                <div class="form-group">
                    <label asp-for="IdFactura" class="control-label"></label>
                    <input asp-for="IdFactura" class="form-control" readonly/>
                    <span asp-validation-for="IdFactura" class="text-danger"></span>
                </div>
                <div class="form-group" hidden>
                    <label asp-for="IdTarjeta" class="control-label"></label>
                    <input asp-for="IdTarjeta" class="form-control" />
                    <span asp-validation-for="IdTarjeta" class="text-danger"></span>
                </div>
                <div class="form-group" hidden>
                    <label asp-for="IdCliente" class="control-label"></label>
                    <input asp-for="IdCliente" class="form-control" />
                    <span asp-validation-for="IdCliente" class="text-danger"></span>
                </div>
                <div class="form-group" hidden>
                    <label asp-for="TarjetaNumero" class="control-label"></label>
                    <input asp-for="TarjetaNumero" class="form-control" />
                    <span asp-validation-for="TarjetaNumero" class="text-danger"></span>
                </div>
                <div class="form-group d-flex flex-column">
                    <label asp-for="EstadoFactura" class="control-label">Estado</label>
                    <div class="switch">
                        <!-- El checkbox solo se usa para la interacción del usuario -->
                        <input type="checkbox" class="checkbox" id="estado-factura-checkbox"
                        @(Model.EstadoFactura == 1 ? "checked='checked'" : "") />
                        <label class="slider" for="estado-factura-checkbox"></label>
                    </div>
                    <!-- El valor real de EstadoFactura se mantiene en un campo oculto -->
                    <input type="hidden" name="EstadoFactura" id="hidden-estado-factura" value="@Model.EstadoFactura" />
                    <span asp-validation-for="EstadoFactura" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <input type="submit" value="Actualizar" class="btn btn-primary" id="miBtn" onclick="spinnerEffect()"  />  |
                    <a asp-action="Anular" class="btn btn-dark">
                        <span class="bi bi-arrow-left"></span> Regresar
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>
</body>
<!-- Div para spinner -->
<div id="loader" class=""></div>


@section scripts {

    <script>
        function onBegin() {
            console.log("onBegin")
           
            // Cuando se coloca loading en el nombre del class se inicia el spinner
            // Este se define en el /css/site.css

            document.getElementById("loader").className = "loading";
        }

        function onFailure(response) {
            document.getElementById("loader").className = "";
        }

        function onSuccess(response) {
            console.log("onSuccess");
            Swal.fire({
                title: 'Registro actualizado correctamente!!',
                icon: 'success',
                showConfirmButton: true, // No mostrar el botón de confirmación
                timer: 2000,
                timerProgressBar: true
            }).then(() => {
                // Redirigir a la vista "Index" después de que el usuario cierre el SweetAlert
                window.location.href = '/Factura/Anular'; // Reemplaza 'Cliente' con el nombre de tu controlador
            });
        }

        function onComplete() {
            console.log("onComplete")
            // Se cambia el nombre del class al loader. Con esto se detiene el spinner
            document.getElementById("loader").className = "";

        }

        document.addEventListener('DOMContentLoaded', (event) => {
            var checkbox = document.querySelector('#estado-factura-checkbox');
            var hiddenInput = document.querySelector('#hidden-estado-factura');

            checkbox.addEventListener('change', function () {
                hiddenInput.value = this.checked ? 1 : 0; // 1 para habilitado, 0 para anulado
            });

            // Asegúrate de que el estado del checkbox coincida con el valor oculto al cargar la página
            checkbox.checked = hiddenInput.value == "1";
        });

    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

